<!DOCTYPE html>
<html>
	<head>
		<script src="https://aframe.io/releases/1.2.0/aframe.min.js"></script> 
		<script src="https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar-nft.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/suncalc/1.8.0/suncalc.min.js"></script>
		
	</head>
	<body style="margin: 0;">
<script>
AFRAME.registerComponent('sun-position', {
  schema: {
    distance: { type: 'number', default: 100 }
  },

  init: function () {
    // Get the current position of the device
    navigator.geolocation.getCurrentPosition(position => {
      const currentdate = new Date();
	    // Logging
	    console.log("New Date "+ currentdate);
      const { altitude, azimuth } = SunCalc.getPosition(currentdate, position.coords.latitude, position.coords.longitude);
	    // Logging
	    console.log("Altitude: "+altitude+" Azimuth:"+azimuth);  
      const pos = this.calculatePosition(altitude, azimuth);
      const size = this.calculateSize(altitude);
	    // Logging
	    console.log("New Position "+ JSON.stringify(pos));
      this.el.setAttribute('position', pos);
      this.el.setAttribute('scale', {x: size, y: size, z: size});
    });
    
    // Update the position and size of the sphere every 10 seconds
    setInterval(() => {
      navigator.geolocation.getCurrentPosition(position => {
        const currentdate = new Date();
	    // Logging
	    console.log("Update Date "+ currentdate);
        const { altitude, azimuth } = SunCalc.getPosition(currentdate, position.coords.latitude, position.coords.longitude);
	      // Logging
	    console.log("Altitude: "+altitude+" Azimuth:"+azimuth);
        const pos = this.calculatePosition(altitude, azimuth);
        const size = this.calculateSize(altitude);
        this.el.setAttribute('position', pos);
        this.el.setAttribute('scale', {x: size, y: size, z: size});
      });
    }, 10000);
  },

  calculatePosition: function (altitude, azimuth) {
    // Convert altitude and azimuth to X, Y, Z coordinates
    const x = Math.sin(azimuth) * Math.cos(altitude) * this.data.distance;
    const y = Math.sin(altitude) * this.data.distance;
    const z = Math.cos(azimuth) * Math.cos(altitude) * this.data.distance;
    // Logging
	  console.log("Calculate Position: "+ x + " " + y + " " + z);
    return { x, y, z };
  },

  calculateSize: function (altitude) {
    // Set the radius of the sphere to block the actual sun from the observer's point of view
    const sphereRadius = 0.53; // in degrees
    const observerHeight = 1.7; // in meters
    const objectHeight = Math.tan(altitude) * this.data.distance + observerHeight;
    const objectSize = sphereRadius / Math.atan(objectHeight / this.data.distance);
    // Logging
    console.log("Calculate Size: "+ objectSize);
    return objectSize;
  }
});

</script>
	<a-scene>
		<a-camera></a-camera>
		<a-sphere id="sun" color="yellow" opacity="1" sun-position></a-sphere>

	</a-scene>
	</body>
</html>
