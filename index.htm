<!DOCTYPE html>
<html>
	<head>
		<script src="https://aframe.io/releases/1.2.0/aframe.min.js"></script> 
		<script src="https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar-nft.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/suncalc/1.8.0/suncalc.min.js"></script>
		
	</head>
	<body style="margin: 0;">
<script>
AFRAME.registerComponent('sun-position', {
  schema: {
    observerHeight: { type: 'number', default: 1.5 },
    sunRadius: { type: 'number', default: 0.25 },
  },
  init: function () {
    // Get the current position of the device
    navigator.geolocation.getCurrentPosition(position => {
      const currentdate = new Date();
      const { altitude, azimuth } = SunCalc.getPosition(currentdate, position.coords.latitude, position.coords.longitude);
      this.data.distance = this.calculateDistance(this.data.sunSize, altitude);
      const pos = this.calculatePosition(altitude, azimuth);
      this.el.setAttribute('position', pos);
    });
    
    // Update the position of the sphere every 30 seconds
    setInterval(() => {
      navigator.geolocation.getCurrentPosition(position => {
        const currentdate = new Date();
	    // Logging
	    console.log("Update Date "+ currentdate);
        const { altitude, azimuth } = SunCalc.getPosition(currentdate, position.coords.latitude, position.coords.longitude);
        this.data.distance = this.calculateDistance(this.data.sunSize, altitude);
        const pos = this.calculatePosition(altitude, azimuth);
        this.el.setAttribute('position', pos);
	      // Logging
	    console.log("New Position "+ JSON.stringify(pos));
      });
    }, 30000);
  },

  calculatePosition: function (altitude, azimuth) {
    // Convert altitude and azimuth to X, Y, Z coordinates
    const x = Math.sin(azimuth) * Math.cos(altitude) * this.data.distance;
    const y = Math.sin(altitude) * this.data.distance;
    const z = Math.cos(azimuth) * Math.cos(altitude) * this.data.distance;
    return { x, y, z };
  },

  calculateDistance: function () {
    // Get the observer height
    const observerHeight = this.data.observerHeight;
    // Get the sun radius
    const sunRadius = this.data.sunRadius;
    // Calculate the distance based on the observer height and the sun radius
    const distance = (observerHeight + sunRadius) / Math.sin(0.5 * Math.PI - 0.5 * 0.53);
    return distance;
  }
});
</script>
		<a-scene debug>
			<a-entity camera></a-entity>
			<a-sphere id="sun" radius="4000000" color="yellow" opacity="0.5" sun-position></a-sphere>
		</a-scene>

	</body>
</html>
