<!DOCTYPE html>
<html>
  <head>
    <title>SunPos</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
	  
	<script src="https://cdn.jsdelivr.net/npm/suncalc@1.8.0/suncalc.min.js"></script>
    	<script src="https://aframe.io/releases/1.2.0/aframe.min.js"></script>
	<script src="https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar.js"></script>
    
  </head>
  <body>
	  <h1>SunPos</h1>
    <a-scene embedded arjs>
      <a-entity camera></a-entity>
      <a-assets>
        <a-asset-item id="my-model" src="sun.gltf"></a-asset-item>
      </a-assets>
      <a-entity id="my-object" gltf-model="#my-model" sun-object-position></a-entity>
    </a-scene>

    <script>
      AFRAME.registerComponent('sun-object-position', {
        dependencies: ['position'],
        schema: {
          objHeight: {type: 'number', default: 1},
          objWidth: {type: 'number', default: 1}
        },
        update: function () {
          var sunPos = SunCalc.getPosition(new Date(), this.el.getAttribute('position').x, this.el.getAttribute('position').y);
          var elevation = sunPos.altitude * 180 / Math.PI;
          var azimuth = sunPos.azimuth * 180 / Math.PI;
          var distance = SunCalc.getDistance(new Date(), this.el.getAttribute('position').x, this.el.getAttribute('position').y);
          var radius = Math.tan(this.el.sceneEl.camera.fov / 2 * Math.PI / 180) * distance;
          var scale = radius * this.data.objWidth * 2;

          this.el.setAttribute('rotation', {x: -elevation, y: azimuth, z: 0});
          this.el.setAttribute('scale', {x: scale, y: scale * this.data.objHeight, z: scale});
        }
      });
    </script>

    <script>
      document.querySelector('#my-object').addEventListener('loaded', function () {
        var myObject = document.querySelector('#my-object');
        myObject.setAttribute('position', '0 0 0');
      });
    </script>
  </body>
</html>
