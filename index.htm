<!DOCTYPE html>
<html>
	<head>
		<script src="https://aframe.io/releases/1.2.0/aframe.min.js"></script> 
		<script src="https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar-nft.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/suncalc/1.8.0/suncalc.min.js"></script>
		<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
	</head>
	<body style="margin: 0;">
<script>
AFRAME.registerComponent('sun-position', {
  schema: {
	distance: { type: 'number', default: 200 },
	date: { type: 'string', default: '' },
	time: { type: 'string', default: '' }
  },

  init: function () {
	const el = this.el;

	// Get the current position of the device
	navigator.geolocation.getCurrentPosition(position => {
	  this.updatePosition(position);
	});

	// Update the position of the sphere every 10 seconds
	setInterval(() => {
	  navigator.geolocation.getCurrentPosition(position => {
		this.updatePosition(position);
	  });
	}, 10000);

	// Check if a date and time is selected by the user
	if (this.data.date && this.data.time) {
	  // Set the selected date and time
	  const selectedDate = new Date(this.data.date + 'T' + this.data.time);
	  this.updatePositionTime(selectedDate);
	}
  },
	
updatePosition: function (position) {
  const currentdate = new Date();

  // Get the date and time selected by the user
  const dateTimePicker = document.getElementById('date-time-picker');
  const selectedDate = dateTimePicker.value ? new Date(dateTimePicker.value) : null;

  if (selectedDate && !isNaN(selectedDate.getTime())) {
    // Use the selected date and time
    this.updatePositionTime(selectedDate);
  } else {
    // Use the current date and time
    this.updatePositionTime(currentdate);
  }
},

  updatePositionTime: function (selectedDate) {
	navigator.geolocation.getCurrentPosition(position => {

		const { altitude, azimuth } = SunCalc.getPosition(selectedDate, position.coords.latitude, position.coords.longitude);
		// Logging
			console.log("Date used to position Sun: "+selectedDate);

		// Convert altitude and azimuth to X, Y, Z coordinates
		const x = Math.sin(azimuth) * Math.cos(altitude) * this.data.distance;
		const y = Math.sin(altitude) * this.data.distance;
		const z = Math.cos(azimuth) * Math.cos(altitude) * this.data.distance;

		// Custom added
		const size = this.calculateSize(altitude);
		
		// Custom Logging
		console.log("Calculated Position: x:"+ x + " y:" + y + " z:" + z);

		// Set the position of the sphere
		this.el.setAttribute('position', { x, y, z });
		// Custom Added
		this.el.setAttribute('scale', {x: size, y: size, z: size});
	});
  },
  
  calculateSize: function (altitude) {
    // Set the radius of the sphere to block the actual sun from the observer's point of view
    const sphereRadius = 0.53; // in degrees
    const observerHeight = 1.7; // in meters
    const objectHeight = Math.tan(altitude) * this.data.distance + observerHeight;
    const objectSize = sphereRadius / Math.atan(objectHeight / this.data.distance);
	  
	  // Logging
	console.log("Calculated Object Size: "+objectSize);
    return objectSize;
  }
  
});
</script>
	<a-scene debug>
		<a-camera gps-camera></a-camera>
		<a-sphere id="sun" color="yellow" opacity="1" sun-position></a-sphere>
	</a-scene>
	<div style="position: absolute; top: 10px; right: 10px; z-index: 99999;">
		<label for="date-time-picker">Select a date and time:</label>
		<input type="datetime-local" id="date-time-picker" name="date-time-picker">
	</div>
	</body>
</html>
